{"project": "pvlib-python", "project_url": "https://pvlib-python.readthedocs.io", "show_commit_url": "http://github.com/pvlib/pvlib-python/commit/", "hash_length": 8, "revision_to_hash": {"31": "89cc1fcbd3eee11fe9ae179c9275a24c04820745", "325": "a5888e4755d9f0cb8d729460dd76098e931c89a5", "469": "8c267c8dccc35214d49e2c7184a3b05b4760c42e", "522": "bc682739f0eb1db5caeaa4615dbb13e36de2509a", "548": "db82bacbd012ba53e0e5670b630bb7e088dc1a5e", "591": "612e9ea1f31a1aa4f1ee08bf3dcddae4a1c4bdca", "789": "ccb4422777bac695364c368375c3dc9f8f782619", "809": "73e1df1bca5283c72c83d25e5e9ff5171c84364d", "812": "1f2994b8549abf1200ce913ceba9e7c41f274544", "835": "f773e2dc748fc134a736570e1b8876de1021deb3", "861": "f281b0f0f5fd5681c3d2b74afdd11e9bb5786cef", "871": "44742c55451a49f44f3d9e8c830b623b9dbb9dd6", "883": "04b7a82dd4f429a512cef5d99bcd325c223342c4", "887": "e77dfeed304cb77eb4d6abade40ca934d55a865e", "898": "683dfe4c157d61cefbb3c2ef72044230461dbcc2", "906": "f9f44c7173ca073e2970adc41e554937fd306b4a", "921": "d372fd37aeed52c4d36dec9a541e6330b475515f", "922": "39c0862a33c3b6286ef1458a036547ed6beec399", "923": "c8b8086078f0680fd8d1530eb9b0e2c910a75469", "924": "853b1214a8ba89e48a4de2ea35ab069895477b6b", "925": "5e59ec3303cafa7fc3173384aa354f5344116f59", "926": "d9244469175ed906a04257db50ccc5050fa1ea65", "927": "ed1b474934c097680a866027bcc763df4d34a4bc", "928": "487e0e8a3d35fc482523c657f24bf740b5dbe360", "929": "fd24c714fc5fa83196667bf151dfa0ee91bd69f0", "930": "449e86b8c16b0eeb6232365496da501c6bc27d2e", "931": "8e1fe41a820b34414361e6a05b63f11427556164", "932": "ffd8f356e0203b32d058401727752f4a698cfd08", "933": "72a7144e83705c86ea02971044264c14037b67a1", "934": "cc380b1611425a77e2c5b8f14431b922f1793c3a", "935": "1182c8e673439e9ad221b169d6a944779bdbe2ef", "936": "726cf07e60517b0f68eead575d77b3ec0c63f132", "937": "e83927df9d31a6bbd8b651a508b3e843d29d085f", "938": "112ee56a4221287e4335daa426e72f6508dcbfba", "939": "b41972054f5124e6f969549c711b97e3c64037b1", "940": "8a4aacaa68d7339aab20f83205cc46eb9c47d3b5", "942": "04bd7532f54b550313d84309c3d3d19818694ccc", "948": "923dc0eeffe45d09f97d49cee426b2c3cb45b6c9", "949": "1c0c3e74b0c9f08ffe481132b839469ba0ee55f0", "950": "9cc946f9d3565bd3861fbcdf9f26d2eb22967ccf", "951": "b026c57cea851763793a1a5e0972d1195d7ec3b8", "952": "23236b21567ba688dacb4315d5462838dd0740ca", "953": "f892664b255dc382b9e87f3340ff768ef31ba0ee", "954": "f8bf8803ca7be53a1932ed90954781d30d881d76", "955": "a16850a22be92ec04adc08ed55038b15bdf30ba9", "956": "8da6afc53a45cb09ea8e33a97a1aaa294cdf871d", "957": "bd13a1ba73b3661a0253902659aac39944f0b764", "958": "d2c9bcd62d5622b74fd85966065647f70b18ea8c", "959": "1872ae8243b99989a451f2c72f6f9d1773739c87", "960": "8aec267601339c6e1c03434c1211814dd40e8426", "961": "a3e05f29c31945de0b0c2cca4fc54771b7b101cb", "962": "fea4d08a37ee4c4845b570e82c9187a2a091f597", "963": "ec996611887747bdef43db874147095e3337721a", "964": "fe5d90d3aa068d549f17cb326dd24faab177c8b6", "965": "fff1131b0b859f175558a26b76a6e48091dbe13f", "966": "e6aa17c526635453953ed93a1b3cd4eb0e530a3c", "967": "ee03ed4233c76f11c90c20ae20400425d53414b4", "968": "ffcfc298d06ef1a5e10bbc03a6fc74fd888666cb", "969": "24980408a6c590aa8903a7a7ca209a3484c90a3c", "970": "80bf796a98426ae39b24ff4606016a0412dee409", "971": "237b03f343d32f3ace51fcb0160232c26007bfa3", "972": "d0d46f99ec4b95803143bedec052d053e15a0f46", "973": "f1eff39c323bfa21a364dab4b9a769b20cee0bbc", "974": "a26d8e161bc122274311b14211582a44e34ab8dd", "975": "09126e9f1a2b6e24f7fa85c8a70fce827ad7d612", "976": "f57f4c6a252721d5d08d44dbbe302bfdec25c2f7", "977": "2a436c60229379acf2f3779b7db556c804277fc6", "978": "5e6ba7e93008b8db0dcf8bcb7792f2710d9b3bb8", "979": "dc6bdbf6ec8be758690dd9f9d2b459dabeaa655a", "982": "dafaa85f8e287fc3d3df7f1728b2097130a0ad62", "983": "9ead2f2ea996094bda751633d7f214703a3ed7d7", "984": "10339eef40b62775cc4d3037a118cf25a940fd52", "985": "36aec412d3ec9fe4a3aad6128283fb7f175324a1", "986": "46059b5c3af67c1c03d94a3c6ab4c4b20aab7bfc", "987": "487cdb91824da2878d0669d468009ab659926786", "988": "4f3b7e4653c8be99ea1ab574984032e822594720", "989": "edbe4ea2a126683c7080824fbff812e0f1347699", "990": "5728d1124c7a5a036c62a20b3d7c14bf7d195c42", "991": "0abc6cebbcc60611a9913932dabcaea059822c30", "992": "845a75ac736c00901c5077f2e57902d505e18d71", "993": "23b97c2fac2e62c9da67f9a947e20bd20eaa8dbb", "994": "e3faaadc36fc842cf123f2ddf23d8c23395f1007", "995": "abe8bf1e8416b3af57bc550a1b20073c6831f029", "996": "45109de2883d0930e0233ce65d2124f679ade021", "997": "affc1bf1974314e756f82eff7078b6f3bd85c88a", "998": "7166fb01506584841c668da630d63915b73d4215", "999": "cba621b0dcc5d65095dddb2c08e7e8b56aa5ea78", "1000": "998840b5857aa3c29878ebee5cc5fdd966f20265", "1001": "05b06744a4ff5f3927fb30b7110ddda674eefd74", "1002": "719554881347b3ca2bfbf0a3f922a75419aae84f", "1003": "f16e53e2763c27fa614eb5f285edc3abed956826", "1004": "fec0679c8ff3f9671603758e803d85981f382cd1", "1005": "ec329e28ce948d015418257f7ae847276afde1b9", "1006": "2b51d4a0c56cf8bde59d2ad971924c504eeffd70", "1007": "710e27e964733e83ffea12bde72698ef3186c2d1", "1008": "6c6685a3f572ba3057c70e29727071f571a6420b", "1009": "d0512644f4c88343400bd424e1b81c75f68e2691", "1010": "3e629d2cdcf4c58bcccecd1151b8270086d414b8", "1011": "dabdeafa1bdfb417e4f7a6ac1e7471f3adc4ffe5", "1012": "f8bbf95e0dbba67748c41d8bf53d600e0fe50eec", "1013": "e1dacb20f378cd5bfee0503e8a242150aee4cf17", "1014": "e3323b56dcae5ca385e34683f877a9a97140b8bd", "1015": "cbd7800355ef5ed782a7023e3c446a18cd6de125", "1016": "15c00eff38d4c31f16f6712e976a63f39af5c952", "1017": "db546de24fea699bd074f19ed4ec6e59092b6971", "1018": "52813151cc952aa74b10fefe6a9c64164bbf5ea5", "1019": "38a52b1e7f43a4f4f9a9ccbf53dc0f6b58b41d07", "1020": "ef483635963a8572cab059f930d3765c17e89cf2", "1021": "20879795b77418f0f47a479d4d51725c603773d1", "1022": "bc80cbf1c134127ae94623b0f1cc9c3a942fdd84", "1023": "0c245a98f90e62d6e723a7c329ebb285db1086eb", "1024": "5ee82b1c3f3f6b851f9f16a4ad52b9ff8cf53375", "1025": "4538befdc7b7e8be2b2f42bc6ec849b37b844b95", "1026": "ed3b01813e6a691ccb1b2dc32f21ec3aaba7ac99", "1027": "8058272d958fccaa586216fb97bfbfe899fd5600", "1028": "7057afcc4e4a216a333b19b372a4cbd8f78771ea", "1029": "c165e9416d565785a785b1dd4f4e8c11af3d059c", "1030": "3e4b86d297e865c40a7d52870ad3af5f12c53646", "1031": "7b17d621b6ab9d80b4aea860bef0d2b69bef0977", "1032": "1ac14bcae7b0102e8c6a8a6c8bd7f9c6bf633a5a", "1033": "673ab97a47ed1e8fdb0e4407a795f8e147c20ec2", "1034": "d68ee4cc87a0c0c99ebf458c6132a8144c6cc51f", "1035": "f8edab976ace482a19a62b9b9a2ddf03263e992a", "1036": "e5473bd88c24dfab6be023dad414e0c0813bd67f", "1037": "d979187d377a81ef3161f07965cede9a279a6ada", "1038": "ef82a39098abb0ed200bd5e49f6bdee159799836", "1039": "d6b22c37f697ab60bb569fc46288804a9d04f31e", "1040": "f821a73577e6a114d0fb182cb36bf74f333f74fc", "1041": "70032ab408e30c58077a770ea903c9ad8341b720", "1042": "7ed0a8a5b4362ae39a3147653ec5568f66517fa2", "1043": "d61ca1df2d4f867dcf65498db394a0a71acb42ed", "1044": "c238c48311a3e74c244e5267637f7a312df666a7", "1045": "5d2a6c82449942346967fe7b9821c0eb524e3816", "1046": "d6d149224cea8eb46b50bcb7bbf94bd9b4bce0ea", "1047": "52eeae7af0774e023ee6c14a907bdca270ebeda5", "1048": "0486c3b5aa202658cf62ed5320aab96784aa2cc4", "1049": "8ce3916411803930f70053e6097bb0084fbdd9dd", "1050": "cc51ea3a61880184da1b5c9891799773c7f820d4", "1051": "f98e9ceb86037e3ea960a7f7269fb91e5586d587", "1052": "9cec7ab304c7536ec357bd70178105be8f68ff79", "1053": "29b2b0cefd8ee150a43903638d44cc9014f5f700", "1054": "d6213276f63969ab87c0a154cb947152156a6aa6", "1055": "594f47cb33a7ca6d0098bcf1751823f1ad502ac4", "1056": "1ecef341fbe6f8bd9db45cff177128f22b742268", "1057": "437be18c5110c2e0c1ce1e6d1f81c85f9c14f6ec", "1058": "af355bd36b2ca57132fb296fc78fe7d520a95d67", "1059": "ee31db17d519267b8a995278d76552c88b9f6067", "1060": "bb0e0b47c8f80cb4f8965ee98af931f8d425de3e", "1061": "c9e331459f0bbc7c40bfeb7763e8f2aede186489", "1062": "0e9d25cf5e0cc6a90d97e1eba180cdca91ebe385", "1063": "b61e149226004d4e5ba0e49da61d180173372fee", "1064": "7cad1e0efb719fc46b2a9e311cfcd117ef55dd79", "1065": "dd030a785dc73a32e25a2585ee88d7e802263507", "1066": "2e844a595b820b43d1170269781fa66bd0ccc8a3", "1067": "c4a6c6e0f8df4e0e1a4c59a9cf16d3e04ffb60ca", "1068": "9a69bf4bb082727b02371efd5a91e2ab9bcfb5fd", "1069": "a156e6c408be634f2c34f88ecf0d037f3b3a0daf", "1070": "c9adf8b062d68982434e8c356bfde72fd7a21fcc", "1071": "48722961486160bb4fdfd638686c129e801210fa", "1072": "f4bbac8cb6b754f00d98af44d8d32829684a5212", "1073": "6331d603d9c594ac065502f7febcfa26a0f33609", "1074": "e5bcf68b01b8a28c114c135aafd27512da741085", "1075": "8fe314c8711de9c4f97eba5f21e03b0c6c58de99", "1076": "2e1c245e4a794657ee3c39cefda7b074103eef5e", "1077": "6946ef158c8a90fba02c16db0eb7d7ce04257f27", "1078": "252c1b267a45ce511543c1c1d73c995417c7d6f8", "1079": "15b1cbd85294d2037f1d6f2006a00752b81e8839", "1080": "84818c6d950142927359ffe308c728a0c080ddce", "1081": "7b6cf7a00c28931011b72bddde04824ad66e14bd", "1082": "f6bc0c52f7461b67f59123c2c199fac8a940f2da", "1083": "608cc01331e4e64e895e71033430410e859c50e3", "1084": "f38fe07f786b49b3b21f63bbc8bcec18bb42af7c", "1085": "d68617c03a2bd6cc95100d91d8de5f1069ae13cc", "1086": "db77241daa4a7d8fa3dc5da41dada384b52629a9", "1087": "de47a36c3526d5c61b7f5abbb1c119a6e2fbeb55", "1088": "d7feb6052122222133baa8fdfea9fb0431b04325", "1089": "91c6a559feab740a346099f020fedf828ad9a557", "1090": "d8f38dd4af66f134c5c94773a23afb293ad1b550", "1091": "695ec230639ecf4097e67c6ee64bf7a6177ba27f", "1092": "aaf33eb71aea2a30fe42f0e95adf3778472aeca9", "1093": "e3635c2faa4ef990cbbae6cf4432d9773d00f31f", "1094": "75d092e58d3c224c2e3edca9fe6d6b05b92d420a", "1095": "d6536c9563ee2a93259985056d34ab904e637ad5", "1096": "9af1ca1751c1e5b94e5f2a136ec135814eed7b7d", "1097": "0be834c12afec6936f1413452facc708819398b9", "1098": "0a14b273517a082603cc157faa88a5ab0ac4cac9", "1099": "544b868330095362f85e9596e0be96cf3a106886", "1100": "b4238beb93be57865ae4d74605f5323f9024be52", "1101": "c9dc7fea702043b646a2403bcbbc073e4e7b6606", "1102": "a873462eb079f7d57cc8c2e5a9cf447ac68027d1", "1103": "5b4ba72092af5bdfb2308e60374b03244f1b8ed2", "1104": "678ceadb7e0a41bde014c1909940c94f0c27b8cc", "1105": "3c84edd644fa4db54955e2225a183fa3e0405eb0", "1106": "739ab19240f3254d41fe8c8135e704bda695c55c", "1107": "b98ec26716ff9361b147bb41894d73c4aea0e674", "1108": "879cb468658e9922fbecbf3096c4f99b58b67c5c", "1109": "775cc6095e476614180b54932de2ec26a2aedc25", "1110": "a210432595839f3efbbf669d5d6b1dbbd4b1ff9f", "1111": "a72aca77a071937ccd740d5f0c6b570f030b6538", "1112": "f75a3a49e18dc06ad03aa2b6506cd155afa69b79", "1113": "de8f2b0eb962557ddf519b975a29ec44d43d1a77", "1114": "16cc0d4972b5905faaf89765166d28f67b228c97", "1115": "2f124d90c892da56385985950f7c3f01210ea795", "1116": "e94d9238a8c6eacee57e03f4a4fa267673f941f3", "1117": "b99ded7ddd0166d88111ced1a648bd9c79a8bbbe", "1118": "10d54de65302b5f83d650b0ac00eaffbe44f4cdc", "1119": "945c339c617d967159ca5f52dde535b2cb8a10ec", "1120": "a349bea38d928696671026dc1e126d44d8d2e529", "1121": "b0e39a6ba0c99fcc294394931229d90a0fee764a", "1122": "c42039543bee9d26f1bd0c513cb0a0f65e2a04c8", "1123": "a9ebd924be75d2c50e9566957f5a7f4c6ee1a9b5", "1124": "a8ab9aad761ff27cdc3b9a67eaa16687da31afc3", "1125": "6e6116c06fb801b7c3da1282e2121501e736e4e8", "1126": "478a3703d5aaefd9893ec63a64da4ebb4dcb4f13", "1127": "ee6d95195072bc1e2049bff59370cc889ac922fd", "1128": "c699575cb6857674f0a96348b77e10c805e741c7", "1129": "4a897d93a0b0acad80a2e9fcc30ba2bead123e50", "1130": "9c364d8d00153ab284885c5a7169b83a8c4f02da", "1131": "a00019b65b31e16d5e7739e5b66ab75e975c5e3d", "1132": "e326fa53038f616d949e4f981dab6187d2ca9470", "1133": "febc343a59c7019c5b78737d3a264b35619cf482", "1134": "a9ff2860e1f8b4423d22787dd35e7aa3cd68d701", "1135": "9635a40517ef43c873049413b6482b0c48e1799f", "1136": "a8b85c31657066fe4b9de06220702ff11a5d8610", "1137": "9a3d1b71e95d94f7822edde75f0b08eb65930774", "1138": "b26ef22d8ab7c7c42d7d11fd1aaa607b103b9028", "1139": "5f7e9d6e0900e8ff612c6f158a3b313a9cd93f24", "1140": "718bd9363a1ef7fcb61e16f948c13380dfb6019a", "1141": "e2a8f31b5eff040c45c8af20ab06942ccc15eb05", "1142": "a0463d4fd751519751f06f0cffacd5a683a0f959", "1143": "66c8b3f497ee0480ec64e534ab55e557bb04aef1", "1144": "7ff8421310640d61adb8533c7ac66cd73dbdab75", "1145": "5a6b65c3bf1c4f977a5b6ac3e2dc56f01da9929e", "1146": "d635c09123319c68182898001712377089199744", "1147": "6dbac00f6c3237a07021ce5cb15177228862303c", "1148": "245ace1a2eb5c03ec355566a80635c9ed14b2441", "1149": "7dcb717fd169c88f342f011df3be3aefa5cce844", "1150": "98537bc9067df034dde3b7ea53982b016dc5e115", "1151": "bb081ed23d2dae0690069f88eab86d5a1c977271", "1152": "1b3163627634121ba310e91cce67922876172fb4", "1153": "8fb73a2532333ddb1afc13c1e558b409ded2c8be", "1154": "363884dbbffca66c85742b8ace2954f50923c4f9", "1155": "fb1ab533ab9a4b87a3161d577215ef3d8f12ed74", "1156": "160c32b0aa6bae6c1f29971b39660b521ebd04c3", "1157": "7100c6bcee64d529ac7edb4d93eb642c9e795164", "1158": "a18ee108006a48ddf299eff33adc754c73aa3cfc", "1159": "fb5dcee57069931456a2b4dc96ff5072a8703ab4", "1160": "b4486c16fe085e22a61a882c122e678fc040d37c", "1161": "5518e48d57668c233c9b436a769d863e357f5574", "1162": "fb50ded8820cfd7c9abc54198033d3fd36ebdca3", "1163": "64a6498b689d27d77bb5967e13eab9bc0018d68e", "1164": "099e573f5f7336dd5902fa043ea3e92534a3d31d", "1165": "734fbbac8fc2794713fa653fb400adacf8ccc6fa", "1166": "7be246ef6fdc759f545a66b98b8e3835cff1fc54", "1167": "6a5b8f886b2f505bec33087370c86832161f2a81", "1168": "396743f0d7d23eb87b07f2c2d83989ba7be219f6", "1169": "99bf42f3dd8b3e1989696a7ce574d846ea46c2e0", "1170": "03d6180f00283600029b56c437b7861e853ddf26", "1171": "87d36da575a62d4c48c8e7c62b509072afc5ae70", "1172": "e545f7eb9fb7387911361b9a9455aa7ff6419b18", "1173": "113917b780d4c7a249b09b197c16568f6212c119", "1174": "d6b85c1f04ba9bbd094b6491c806d3bf43cc8031", "1175": "94471fdd0f7265ca6d2fb43d934b76a2be933e9a", "1176": "c9929e85986a3368ed370203ef8699617c0cdc61", "1177": "79038f2169cf5cc7832cb41ce3380779dd7c4972", "1178": "ae98bf94413ac1495c8fe3ed4ce985a3f74c3805", "1179": "13b0134442690af8e2f20055a2145cc34acd8331", "1180": "7274e0ace6ea666d036b04e1d269777de8cd8c22", "1181": "e526b55365ab0f4c473b40b24ae8a82c7e42f892", "1192": "a28d8196a9ba5501e73976789c091628793768cd", "1193": "fef827b6b99526a09f3c07bcdac1cdb0c1491aa5", "1194": "b91d178868d193afd56f8e3b013661a473d699c3", "1195": "6b03e9d5ecbedaaf33bb521acfe358f160a0cf2a", "1196": "06f8f6e323daac44b1811a9a88d3c2e6129f68d8", "1197": "7bd1a3f1d2c77c84fa09c6e3685756147814ffc6", "1198": "73e2e0ceb1233a381cf0cd701e230970b96b89d1", "1200": "93adb591b6292c1b4649758e38c43559009e5cbe", "1201": "85eeaa795e82bb486bc58488ac70269da8c72be0", "1202": "b35905ac167ebe9e5698f3904f91b4d421e4d432", "1203": "3ce8e1a5e5db42d09982e0153b65b4a8547180fa", "1205": "6a0aca7f4afe3e611a950c76ea4e7c5d09ba2e5c", "1206": "f8921bd3879c4bcd9c0242005319729ab04ce7f6", "1217": "e185287802ca43ad7d2d88755122edaabd477b34", "1218": "4965c403d318b3f4ddbde0db15a4acf779caf0f5", "1222": "e04d959042e8dda9440a07dc9709e35b3f479200", "1223": "e15d4644d375c6548ec74e60609cd9e661cd5676", "1224": "3183cc9149b7a7d8d42fa707295160a9d98873f2", "1225": "e22c0854b133a74ebfb8f261d560e8476a5c492a", "1226": "05b320965d6ea6ea1c21ae66a0336b7b0bd82fa5", "1227": "d2f15e326377b992302ac914eb65680cd0fbb95a", "1228": "bf21779660f677c878d0101007086dd9d8851b9c", "1229": "97c6698f5d45aa65b3e3d61649bff08d7cd52c4c", "1230": "ca5d62fac4c9c4e1712a974de535158fca417d65", "1231": "4380445ecd9b0fa5ac365065dbb5cb2ea0733b51", "1232": "ea0f0b228545827a11b628c0100f48ae48bb4d78", "1233": "f6f92072b8ea43f131ba1d639c2e6f1bcae3e4ec", "1234": "c67c9ec418aaaa17e73c7a3b30f781b5b696b381", "1235": "a1e8134fa452030a1ca20871305fb62335845e13", "1236": "61080434d712fe38dc1725670d483c2231aa87c4", "1237": "010a2adc9e9ef6fe9f2aea4c02d7e6ede9f96a53", "1238": "0f3e187cd4ef23d541a97b161ea2436d5f4e45d9", "1239": "39b36074807a2dedbd056a1beee775d21579a7fc", "1240": "8480af3f8d0a238f4ab091fd01d3c105105875ba", "1241": "d216ebe82156be9370ae435b71eafb651cf50080", "1245": "9f5666053cf1082886feae9bc4d4836d6a733e98", "1246": "49da0318256d8b46f90d4b29a7023de680f8410b", "1247": "27872b83b0932cc419116f79e442963cced935bb", "1248": "646c8fd22054b21e7ad0de3cf72d3341dd8f8cff", "1249": "87d1bf21ed7f9c654ef55864eb1035c18fbb1cf4", "1250": "a7edb8b582174ed45f2d3859f29261908f5e0ab5", "1251": "75369dcabacb6c6c38790cc23825f33f155ad1a9", "1252": "8ca32c97b9c63a31065cd7c9c552638566554c71", "1253": "37fba6bf4ca5ba0101db638e73b735fe62c8f27b", "1254": "71d41d2f78a0002c5dc73a528902f9770c41e594", "1255": "2e98a67f0729f7755188372265a11e6ed14a192c", "1256": "b4bdfd3be8784aba8f194e729b72f5cb9d19c3f4", "1257": "a5c24f01e9b420968f5fda0d5c46ce2a4cf2c867", "1258": "b2a17e4d626bbb29110fce2190dc894b759d8b08", "1259": "4c8a49f42096d6892fa2f750f2be5a0f6dfee900", "1260": "56e6498fd5e45a3376926a362c61bd3a82e5da5a", "1261": "7fc595a13bcd42e3269c0806f5505ac907af9730", "1263": "0271a3e30dfba70ce267fc1d07cfd2aba90d1470", "1264": "edea6066d694dcdf2cdee8869f1326ad0c592a3f", "1268": "2819ac13018a30301639ce67438ebadd2335cdf8", "1271": "766b0cabdbc2d4f3923fa82622cb8b0782da2df7", "1278": "bc3a9c8efcedd4b686f60ed0e3d3d7548189bb27", "1279": "a6667a390d048d4301f73acef3267596dc1fafcd", "1280": "72f3783bd0ca874e78ece7922938f6f3c652a428", "1281": "30d784e7bbae6487c79090dddd122aeafe268435", "1282": "04a523fafbd61bc2e49420963b84ed8e2bd1b3cf", "1283": "c24bab0ed61df5dfff0fdf6444c10c05d4fb468b", "1284": "f8b9c04c13228ae74fa3be1cfb7e03ed4cf4eaa5", "1285": "b105021f7c1a47f888363af5585083fc27aefd4c", "1286": "e2b7f193af75f8bd6ea9e6297b4240a6cf5953d1", "1287": "3e25627e34bfd5aadea041da85a30626322b3a99", "1288": "11c356f9a89fc88b4d3ff368ce1aae170a97ebd7", "1289": "1024194dfb71f611a600e5c403fb98f42f5f0f89", "1290": "efdc8e9d816b28e1a27d9c7d9b98776f670b314e", "1291": "1844e3d30069abdf43cbf85e55c41f3b3e72f738", "1292": "e4852c5563bc861f0d736f5ce294684ee6dc683e", "1293": "6e5148f59c5050e8f7a0084b7ae39e93b80f72e6", "1294": "74df8b650b6ed34e907ace5b67ad0b3b16f949fe", "1295": "aa1635bcb40dc83f82e9fd72158670c235bfe99b", "1296": "0d0aab4a61be4f1cea3a77be546ff3b941a7c297", "1297": "7a99b3472512f37534ae044f99aa623cdce105cf", "1298": "b9fe754a5edab2a96dc57d09a5030b26f450590e", "1299": "6e936f5799f5437845a9468eb2413efdada5c843", "1300": "926d2f95bf45b33783741837dab9f4113de4de52", "1301": "5a73ba81430356ee4f47ba99fcc552e7fee72c61", "1302": "4cc6c65df055bc0154c525a5bb037a2c23463115", "1303": "84c76f601b3809f3a1010d801ff65a7a2af080fc", "1304": "5a21ca46c0c51e1b357a04aa9994a5ebb320896b", "1305": "ba7d7535dabe15dd59fe2fbafb8eff37099607d7", "1306": "b0d29f550ea14d49499a97d60fa80c32a2a883d6", "1307": "f94b5ad0d64e176f79105c27b9c37cc6493269f0", "1308": "149fd02e9edae50b9acf74a499344f1ce6c06677", "1309": "ba4a19970aa02bd9435d5a6f8a1255695e0c054c", "1310": "56971c614e7faea3c24013445f1bf6ffe9943305", "1311": "6b92d218653633e366241c31e8836c0072739ece", "1312": "641e0960d35fb77f5d6aed4e92fc14429f1d8c89", "1313": "1385943b5ca8a5ff0102f37295779227d37c58bc", "1314": "7ed18c4b6f5618d48f5e691f94af0196d39da3c8", "1315": "750b1fad5242e46a3abccd9768f1c4b0de799fa7", "1316": "0b8f24c265d76320067a5ee908a57d475cd1bb24", "1317": "975b79814b6f7f70cb91cd402c4afa5d5adf215f", "1318": "47654a073e0eb2b48b2ccdadb5cade9be0484b73", "1319": "dd78d6e00468c28159fc8a3e1f115576ccee2144", "1320": "5a5d4aa7e5e5942b170b05f6acdad8830e7dc6a7", "1321": "b40df75ddbc467a113b87643c1faef073cc37b3e", "1322": "b666520f84cee895daa3418e06d8d8a543fc1b38", "1323": "59a8b6c91a2958b604f67b919993c196d3ed9140", "1324": "dc0d425b55b944e1e32503646bde040af098302c", "1325": "8b98768818ee5ad85d9479877533651a2e9dc2cd", "1326": "85cd89cbed138dee62c2f7872547d044b277395b", "1327": "dc617d0c182bc8eec57898a039cb5115b425645f", "1328": "684b2478e4e174c5eeb10d49a709bbe947921abc", "1329": "c17f7281c168caa7b68a2901b7e6116670138be6", "1334": "933d0d80408651801de9755e0e427f4abb02fd6d", "1335": "1ebe7b05425dc8b3ea4b471f0eec79191cb83812", "1336": "709daa6f8feddb50ae50b1da13f5f720d8ebb78f", "1337": "40ba4bd5c8b91754aa73e638ed984ab9657847cd", "1338": "6edef7f3cde9a9dcdc1a75d21aa960d9589f20da", "1339": "ca61503fa83e76631f84fb4237d9e11ae99f3c77", "1340": "50dcc7fe412d9e27fe06670b8057e3d8e9ce5b19", "1341": "0415365031ca8d0b2867f2a2877e0ad9d7098ffc", "1342": "7661b05e7763a026829e5b0b4e3dcb2677d89d25", "1343": "77ac247e1cda03afef35e648372fec4a5b7f1e9d", "1344": "5bdad64434ef4e432b893313e0858a02b02480b6", "1345": "01a0840e98ad34e42263c083a1c04b8621f8dca1", "1346": "310d191d141a0fb187f4177a4688b16b0ded001b", "1347": "943663af8472886a68edc7c3fe50ac6b1695487b", "1348": "0326b6fae762b0311e8d504e2ee9c1c01cd759a1", "1349": "7eae1fc58cd693708c65102294a3991e6fbc328a", "1350": "276a30de72a392ff59f798b8850229e9527ff03e", "1351": "01a23e31bcb9e4f844c5877a48cd7681406c6696", "1352": "5b0b15ae2e451ddcd91af5f69f9bfb4595ec57e1", "1353": "82208ff8f26af52fd77ed3bdc030e68bfd0ed265", "1354": "68b3b31619292085563c3b1443f24518c6948a96", "1355": "4329ac409f117381fbb7142b0f8e779e22207d73", "1356": "d5d8ffaa9d1201fc943bb0b3e29f7179a65ed995", "1357": "f80068c86b9fc14c9395b52fac39a8e9fae5ef27", "1358": "7c0d7044a4587947c61752e3765b82642bc31b7a", "1359": "8fe6a43b3bece2b18b19f944f697431210cb7d36", "1360": "699f59142b9f5dca1183f447cfff5ca479aca5cb", "1361": "5a14156e10695890e4e3eb84012d4cb3856ad5ba", "1362": "1869d87923f2d8740ec7b3f2a47d2ef3ffb54d43", "1363": "4ba98714f64690356c1160a30717c1d5ff67ecc2", "1364": "f13d1b1c9ab41b08e781d73b7da239b34c3f8182", "1365": "7766bc6a4d572c787b3b6fc58d8dcac9c8dc44db", "1366": "b73d4a2052563a639326b9cca841c94214900c79", "1367": "0e6fea6219618c0da944e6ed686c10f5b1e244a2", "1368": "9543d875fafba2891c9c6cf4a8fff11dc91019b6", "1369": "0fd5c43acc8a90972bf5018d3c07b6ad8b93a5fd", "1370": "f318c1c1527f69d9bf9aed6167ca1f6ce9e9d764", "1371": "238146ddccdc4a0838a2cc7435abf512e8f6bc00", "1372": "cdb0b12b56b82c8da11bffe8d06e05ba38faa8f7", "1373": "6c857ae64fe46959ea0518be30c01929e3dc2be7", "1374": "65782fdf24c96cc092329942e29904e78b0b3cce", "1375": "c1bbf71fe746fac11a10572a9ffcfa328c642392", "1376": "403f65e42900d807fed54568404d3526afa6062c", "1377": "2dff28aba22b635977d5b4678e8be4eeb24c7534", "1378": "518cc35567baa15ae203bb8537452927ae10c7a7", "1379": "2f08db17ef9d2dcea8b02673167c57166c5fa5fa", "1380": "862ac82854fffefd10469b1adc30d051304eab59", "1381": "61e9582561100c6aa1bc6bf5f7f7dd01865a5226", "1382": "e47f2d4669bb1b3158589697924715646eac5eee", "1383": "90013a5ce43611c43224b3a2f3ef72f54ad527af", "1384": "aba071f707f9025882e57f3e55cc9e3e90e869b2", "1385": "db7e5d8a96e21ab3c67c3b5950e1655dff0834c9", "1386": "79454c4cc7c6669811b445ede5cf00010fd8b6b0", "1387": "9aed6b7524aba2a1f0e4fa49173eafc251ee1300", "1388": "797ce0517d961346499827c1ef3d1fe1117ca819", "1389": "ed05fdd2e6f4b95646e9223cdd3a4db46a160962", "1390": "987186843c54d5e342f4020239f96169d7ab4203", "1391": "e105486ed7bfe093b66da5bcb4b82d8e99f479bf", "1392": "b3c1b5e9fba606c3a89c052d07c9e500518bba5d", "1393": "2516c96b55f0aa05b266b8d11a95d535c3f3eb40", "1394": "1ab0eb20f9cd9fb9f7a0ddf35f81283f2648e34a", "1395": "55af1605c463c6640dbcb5d1866b8b09cfc20a93", "1396": "12d8295117b251363e93d22747aeb3f867b49377", "1397": "d5d1d66aae4913f0e23b9a79c655efa1bdafe5f4", "1398": "291631acd6c946f362d9cccda2ddbc129c1154ec", "1399": "f86d71dac80fd68b94dcf29257d3a0bf4f0ff417", "1400": "95e25fd7a258ae97bcffde947c0980fa3a737536", "1401": "d6eece8f09cc960081aace7424a97e8cb6ae5a39", "1402": "9a6f76e99d76ff1204f7f08a73165d313136c4ab", "1403": "93e84041387c80bf8738fe96409a0cfd5852c29a", "1404": "c0c46b4dcb5b34f4062c8160d2c92d4c5089b273", "1405": "b8f89b86cb1b4f701c09734dc9a647127a37ef12", "1406": "63c36db473ce9d7406bfb90526c37783515716c2", "1407": "46e11a9cf32d04046def1107290f752fb4a50d50", "1408": "f1c16f222ad9898eb9eed408c4d110b2e460fc5b", "1409": "35fc5e978251f3fe4383ee03d98ba02d98085f20", "1410": "df1c56e92d91701319adad4fe5cf98837edad0fb", "1411": "1893b20a7b755004f561037161c242db24e2870c", "1412": "27cba7ae3fd8a5d9ad16553f6059a174630479b7", "1413": "e3baa126eb832a27b5faa128f57d37cf268fd8f2", "1414": "c2431832040f585969bbd1868f6acdd6ddb4e0a5", "1415": "884a15308ff75055510cd74053ba202067533155", "1416": "cf4a8adc8200be5c59e575483ffb0c37bd838e09", "1417": "edbf2a68942cbc1ef725ceffd4a356e8d0228258", "1418": "8460b360052c9eff3abdfd681a83ae062247a38a", "1419": "5cb695d2a5d2edbadb41e876858263e81a1f443c", "1420": "8d0f863da92739669e01ac4da4145e4547638b50", "1421": "83e379a1cf1d82cf85534feeb32f1f08cae583fb", "1422": "a0812b12584cfd5e662fa5aeb8972090763a671f", "1423": "5047b26c7d0c8b1bb65c397b32839b641c00f452", "1424": "91986b9a2386c35f381f20fd2250d04abf582d4c", "1425": "c2fd03a166949b86c6d6f7820057c006c2e27dce", "1426": "f928d39660f6737bfe5a16adb77c3a7ba5ebe7e4", "1427": "04e3ffd5ed2b8504e45ee0dc6bc7194d2440012d", "1428": "577f3b54974eec244ba1b948dc8b248c80d3ead6", "1429": "35af84e9a7bede8dfe86d6d6c73002393544ab5a", "1430": "c8b04a569e434bbb0dd7fc286bb6872bf3131f97", "1431": "c0daa5da20a9ba085ec02803b7cb170f4bb1e945", "1432": "b265b1cd342508745efde975586ef1ccae31882e", "1433": "f2d14cea0bd20dfbafdbc375bf1285b67ea78e60", "1434": "c3016f131797a7347f3bfc4c4c7652df821e3f89", "1435": "59cbae726bb6db7f79569c56c1c20f00d285e5c8", "1436": "3f397ed44075b01f4ba535750356859195a51b2d", "1437": "c9bbdbb1cedcb47807ce87198caa9f26d51f34c0", "1438": "65e6fb3293e8914519750e8db4449cf3506f9ebd", "1439": "e659a5a551b5cf00239bc9bcc6451c478906b7bc", "1440": "7348be8dac399241e5b4233ad8444bc329139734", "1441": "4d75e259f9bf1fed699e6248084c8c8e8f3a533f", "1442": "b2eca71bebd6a44683ad877e75f73222e0b81dc6", "1443": "9144a3bef078755d9e0a636ea1e04032654c14bd", "1444": "798799aa61bc3bcef50c729de14b41ab493d8372", "1445": "3692427bef155a32eac525fe965ed8d407a7846e", "1446": "2fcd6ba17113c54201aefd8d89e33e268d6a2e9d", "1447": "e1393f799366640d2b60a267929a47410bb0faa8", "1448": "6ffe257a4d1d797692ea8959db0d78cdb5f06e88", "1449": "6a94e35ffae279468d59577a1d2fbefdcbf768d9", "1450": "ac2cb4b9c1eca307f7e5b9b758369b9daab94294", "1451": "875aa1026a277ab115621e1c034206e743ae5a10", "1452": "543d97a9625856b960678b88fd0e8d439a17dfaf", "1453": "38fc1429c0fce778ab00346e1379d82df6074528", "1454": "ce7ddbcd328f8aad391e2db5aa32e6acc5dfd272", "1455": "73965c292ba35053745316816e539912eb70deca", "1456": "bdbaf4c238ce2b373d04af48193b14659662cef1", "1457": "b7768b424d87ff86a863b3565ee708b3470cccbc", "1458": "dd6062afdf86ac113ac53d7a493710f5c79b8935", "1459": "e50def0f5dca8346d43fb21c5dd08ecde1689b98", "1460": "a741799572d1e89706625829d3854e798de8d468", "1461": "bd86597f62013f576670a452869ea88a47c58c01", "1462": "eefc35ccecfa92b4eebd19f96f5044f79e6b0bcf", "1463": "582b956c63c463e5178fbb7a88fa545fa5b1c257", "1464": "8e0b724f2514e53b60b3edba2db7c66be87867dd", "1465": "8b1a1944827b73cc97f5f0f4b50d8ae1c7001a2a", "1466": "c78b50f4337ecbe536a961336ca91a1176efc0e8", "1467": "df8055e4f58a8bf084eb387424cabed6647914ed", "1468": "e8da6a5bb699d07219aa847eda9e73ef1cc8d856", "1469": "4bdbfd64468091b0ed23d596ae316c451c9b7436", "1470": "e6e5b043f5f59af1c5fde0f25cc1793d79caa78b", "1471": "a5f3ef43eb0f9e4b60d40b6b8cc546a2014d5536", "1472": "771eb46c8bffca2cd07529dbd5bf53779613d6f5", "1473": "f82fd685ee74b53381a87c08042f5165ff5f2c2e", "1474": "5a7c541e43833253489b64a785335f8f16f04138", "1475": "a49123bd659e12b05b7a6fe68dbc14ffd624f1b1", "1476": "f5fc123bab461cbbcf354a007d983785ca7cb12b", "1477": "800681306df1efb2f88539e6483900dc1622462f", "1478": "26de2f00848ec1059135a9093d81a21cef74e9f1", "1479": "57625c39d86d12699e35450a6d619c2e02cca294", "1480": "5b059143cd16f1d3670a7b4dcc931f1f356a497e", "1481": "19ffcca882988f05a96700809fb35f4a4d873c38", "1482": "b11c9e2e55db71e7cac611717a027efb3761e401", "1483": "93a432f3cfcb55eafaae79fba19f7f13c53cb983", "1484": "afa47c4ea1bebe0727259f28abadf75de55e03fb", "1485": "9b12b3666b6a2e0c14d9f536a7e4591ee042075f", "1486": "e7531b21c28bd8e886a7cde05658fb97e68912dc", "1487": "25af86599845f23b0ce57dc1cbe743b3a1e68d1a", "1488": "55e05776877416fb2bcc43eeee4119b8b0504942", "1489": "a19b528612fce724eba6faec9d4d1223e85dd462", "1490": "faf27fee1fcbae3b7056bd02f9e98b7d6e5cb42d", "1491": "7e88d212c786d0ad334dce6fcafaf29339ff60ab", "1492": "f4d7c6e1c17b3fddba7cc49d39feed2a6fa0f30e", "1493": "f041355e825717b4bf2c22eb180c7a342cc59835", "1494": "7bb30ad6e9d599d10510c7b37d95d56f14e846b4", "1495": "bee329bd926c308a3e07e9099999fa37634a2f88", "1496": "bbc863dc1d0889160d255c2d74bf24e2b98cf08d", "1497": "13744cad9b01ab660746ef59ac6f23847f96fef3", "1498": "db1111e55429ecfbbbe57646859c5c7a62ec6742", "1499": "f66cb913a5276177aed3d6caf84e41fb3206c741", "1500": "ef8ad2fee9840a77d14b0dfd17fc489dd85c9b91", "1501": "c1856ac5a7ed4e544ca4f6ae865a975c7b41538d", "1502": "7a2ec9b4765124463bf0ddd0a49dcfedc4cbcad7"}, "revision_to_date": {"31": 1402199527000, "325": 1425149935000, "469": 1429557568000, "522": 1436148418000, "548": 1437080494000, "591": 1447455968000, "789": 1458586475000, "809": 1461115259000, "812": 1462030925000, "835": 1466015685000, "861": 1469728068000, "871": 1475719716000, "883": 1481152165000, "887": 1482941150000, "898": 1487445276000, "906": 1496677913000, "921": 1502468763000, "922": 1502816516000, "923": 1504884909000, "924": 1504889908000, "925": 1506697505000, "926": 1506699583000, "927": 1507307908000, "928": 1507308377000, "929": 1507563475000, "930": 1507563831000, "931": 1507567611000, "932": 1508263738000, "933": 1508281844000, "934": 1508862822000, "935": 1509986934000, "936": 1510599875000, "937": 1512068943000, "938": 1516739713000, "939": 1518462065000, "940": 1518491659000, "942": 1519232061000, "948": 1519763429000, "949": 1522452930000, "950": 1522949532000, "951": 1522959074000, "952": 1523305692000, "953": 1523310281000, "954": 1526002431000, "955": 1526226967000, "956": 1526485139000, "957": 1526655672000, "958": 1527271647000, "959": 1527779109000, "960": 1528387796000, "961": 1528899911000, "962": 1529252719000, "963": 1529508985000, "964": 1530025594000, "965": 1530025663000, "966": 1530032495000, "967": 1531168538000, "968": 1531188898000, "969": 1531236296000, "970": 1532707471000, "971": 1533091202000, "972": 1533091232000, "973": 1533338710000, "974": 1533578044000, "975": 1533586102000, "976": 1533656155000, "977": 1533744927000, "978": 1533871086000, "979": 1533871160000, "982": 1534255127000, "983": 1534259432000, "984": 1534259954000, "985": 1534290071000, "986": 1534290368000, "987": 1534639222000, "988": 1534696412000, "989": 1534862726000, "990": 1534948963000, "991": 1535043899000, "992": 1535155850000, "993": 1535379291000, "994": 1535386157000, "995": 1535732267000, "996": 1536077920000, "997": 1536102249000, "998": 1536102265000, "999": 1536175132000, "1000": 1536188092000, "1001": 1536190944000, "1002": 1536251033000, "1003": 1536253740000, "1004": 1536253811000, "1005": 1536340252000, "1006": 1536340312000, "1007": 1536449304000, "1008": 1536530045000, "1009": 1536686232000, "1010": 1536691119000, "1011": 1536693487000, "1012": 1536727622000, "1013": 1536767665000, "1014": 1537112934000, "1015": 1537206306000, "1016": 1537217754000, "1017": 1537407230000, "1018": 1537466892000, "1019": 1537467746000, "1020": 1537891469000, "1021": 1537908761000, "1022": 1538518162000, "1023": 1538695527000, "1024": 1538778889000, "1025": 1539110173000, "1026": 1539127694000, "1027": 1539127753000, "1028": 1539698866000, "1029": 1540843140000, "1030": 1540845314000, "1031": 1541445709000, "1032": 1541451474000, "1033": 1542139937000, "1034": 1543164742000, "1035": 1543247960000, "1036": 1543248042000, "1037": 1544455331000, "1038": 1544456430000, "1039": 1544546467000, "1040": 1544563460000, "1041": 1544651287000, "1042": 1544656510000, "1043": 1544749014000, "1044": 1547066167000, "1045": 1547741448000, "1046": 1548083948000, "1047": 1548084266000, "1048": 1548125345000, "1049": 1548170252000, "1050": 1548549073000, "1051": 1548690030000, "1052": 1548699959000, "1053": 1548948599000, "1054": 1548956691000, "1055": 1549838674000, "1056": 1550267796000, "1057": 1551108531000, "1058": 1551404674000, "1059": 1552274177000, "1060": 1553110049000, "1061": 1553885493000, "1062": 1554505448000, "1063": 1554947136000, "1064": 1554951416000, "1065": 1554990813000, "1066": 1556115637000, "1067": 1556834775000, "1068": 1556834792000, "1069": 1556892943000, "1070": 1556892973000, "1071": 1557154135000, "1072": 1557154177000, "1073": 1557284109000, "1074": 1557330799000, "1075": 1557332520000, "1076": 1557767665000, "1077": 1557773036000, "1078": 1557846062000, "1079": 1557851415000, "1080": 1557873781000, "1081": 1557931674000, "1082": 1557939027000, "1083": 1557940970000, "1084": 1557944962000, "1085": 1558389525000, "1086": 1558982912000, "1087": 1560350909000, "1088": 1560363432000, "1089": 1561672484000, "1090": 1562696403000, "1091": 1562770454000, "1092": 1562770499000, "1093": 1562784046000, "1094": 1563640717000, "1095": 1564167238000, "1096": 1564167989000, "1097": 1564667610000, "1098": 1565097199000, "1099": 1567010958000, "1100": 1567011062000, "1101": 1567087979000, "1102": 1567108923000, "1103": 1568043362000, "1104": 1568065686000, "1105": 1568073579000, "1106": 1568211231000, "1107": 1568222450000, "1108": 1568647563000, "1109": 1568660245000, "1110": 1569258038000, "1111": 1570744064000, "1112": 1571416637000, "1113": 1571434562000, "1114": 1571681472000, "1115": 1571850821000, "1116": 1571941031000, "1117": 1572383554000, "1118": 1572536143000, "1119": 1572540077000, "1120": 1572707415000, "1121": 1572991641000, "1122": 1572992072000, "1123": 1573140214000, "1124": 1573141770000, "1125": 1573665384000, "1126": 1573761177000, "1127": 1573860539000, "1128": 1574175731000, "1129": 1574791380000, "1130": 1574793467000, "1131": 1574803916000, "1132": 1574870867000, "1133": 1574887473000, "1134": 1575316288000, "1135": 1575667550000, "1136": 1576191199000, "1137": 1576259132000, "1138": 1576260480000, "1139": 1576525079000, "1140": 1576595258000, "1141": 1576692822000, "1142": 1577130399000, "1143": 1578073914000, "1144": 1578593823000, "1145": 1578674377000, "1146": 1578677136000, "1147": 1578697501000, "1148": 1578844829000, "1149": 1578937285000, "1150": 1578945738000, "1151": 1579206173000, "1152": 1579299160000, "1153": 1579308754000, "1154": 1579731377000, "1155": 1580313276000, "1156": 1581020945000, "1157": 1581353136000, "1158": 1581390822000, "1159": 1581542468000, "1160": 1581600321000, "1161": 1581649352000, "1162": 1581686798000, "1163": 1581776550000, "1164": 1582319964000, "1165": 1582323550000, "1166": 1582323589000, "1167": 1582383490000, "1168": 1582509542000, "1169": 1582554983000, "1170": 1582644896000, "1171": 1582741869000, "1172": 1582759762000, "1173": 1583019555000, "1174": 1583076336000, "1175": 1583169304000, "1176": 1583187112000, "1177": 1583202689000, "1178": 1583249863000, "1179": 1583356507000, "1180": 1584020997000, "1181": 1584411792000, "1192": 1585434187000, "1193": 1585621619000, "1194": 1585621925000, "1195": 1586218412000, "1196": 1586281882000, "1197": 1586610272000, "1198": 1586791467000, "1200": 1587091986000, "1201": 1587092005000, "1202": 1587584965000, "1203": 1587653050000, "1205": 1588646577000, "1206": 1588996574000, "1217": 1590085098000, "1218": 1590102839000, "1222": 1590116043000, "1223": 1591758013000, "1224": 1591826894000, "1225": 1591887411000, "1226": 1592489481000, "1227": 1593364712000, "1228": 1594058963000, "1229": 1594157160000, "1230": 1594839067000, "1231": 1594954453000, "1232": 1594996017000, "1233": 1595003560000, "1234": 1595006426000, "1235": 1595021107000, "1236": 1595094262000, "1237": 1595183513000, "1238": 1595183775000, "1239": 1595186056000, "1240": 1595192071000, "1241": 1595350461000, "1245": 1596834038000, "1246": 1597420275000, "1247": 1597943179000, "1248": 1598374910000, "1249": 1598374976000, "1250": 1598387874000, "1251": 1598489439000, "1252": 1598556834000, "1253": 1598576082000, "1254": 1598648357000, "1255": 1598987909000, "1256": 1598993366000, "1257": 1599076738000, "1258": 1599084886000, "1259": 1599085411000, "1260": 1599099265000, "1261": 1599271074000, "1263": 1599349204000, "1264": 1599350228000, "1268": 1599420543000, "1271": 1599434494000, "1278": 1599586872000, "1279": 1599594852000, "1280": 1599600812000, "1281": 1599757093000, "1282": 1600224565000, "1283": 1602260475000, "1284": 1602261186000, "1285": 1602265108000, "1286": 1602273321000, "1287": 1602779162000, "1288": 1604941977000, "1289": 1606146959000, "1290": 1606259099000, "1291": 1606751188000, "1292": 1606926991000, "1293": 1607371216000, "1294": 1607570277000, "1295": 1607570381000, "1296": 1607807804000, "1297": 1607963261000, "1298": 1608154530000, "1299": 1608172402000, "1300": 1608748636000, "1301": 1609776534000, "1302": 1609776776000, "1303": 1609792132000, "1304": 1609811628000, "1305": 1609814799000, "1306": 1610042593000, "1307": 1610656154000, "1308": 1611092040000, "1309": 1611156300000, "1310": 1611166480000, "1311": 1611264129000, "1312": 1611352554000, "1313": 1611431465000, "1314": 1611694728000, "1315": 1611776936000, "1316": 1611866191000, "1317": 1612301728000, "1318": 1612462834000, "1319": 1612496174000, "1320": 1612544199000, "1321": 1612555555000, "1322": 1612811141000, "1323": 1613058142000, "1324": 1613429895000, "1325": 1613505546000, "1326": 1614628707000, "1327": 1614968934000, "1328": 1615405132000, "1329": 1615572487000, "1334": 1616090421000, "1335": 1617039714000, "1336": 1617216902000, "1337": 1618975542000, "1338": 1620357402000, "1339": 1620411791000, "1340": 1620423216000, "1341": 1620835655000, "1342": 1621011938000, "1343": 1621011963000, "1344": 1621012432000, "1345": 1621028138000, "1346": 1621176706000, "1347": 1621186707000, "1348": 1621264638000, "1349": 1621276876000, "1350": 1621553017000, "1351": 1622051375000, "1352": 1622138658000, "1353": 1622821774000, "1354": 1623080772000, "1355": 1623257817000, "1356": 1623620742000, "1357": 1624318412000, "1358": 1624661521000, "1359": 1624661765000, "1360": 1625774641000, "1361": 1626103078000, "1362": 1626290532000, "1363": 1627355028000, "1364": 1627355169000, "1365": 1627663025000, "1366": 1627922791000, "1367": 1628351706000, "1368": 1628465743000, "1369": 1628523572000, "1370": 1628536547000, "1371": 1629219993000, "1372": 1629388955000, "1373": 1629515433000, "1374": 1629819685000, "1375": 1630001827000, "1376": 1630341317000, "1377": 1630508505000, "1378": 1630536138000, "1379": 1631305640000, "1380": 1635785604000, "1381": 1635970845000, "1382": 1636152417000, "1383": 1636152433000, "1384": 1637008037000, "1385": 1638912506000, "1386": 1638982108000, "1387": 1639107338000, "1388": 1639157392000, "1389": 1639174952000, "1390": 1639519887000, "1391": 1639520306000, "1392": 1640613706000, "1393": 1641257518000, "1394": 1641259575000, "1395": 1641853723000, "1396": 1641948289000, "1397": 1642279325000, "1398": 1643765014000, "1399": 1644290641000, "1400": 1644591743000, "1401": 1644965832000, "1402": 1645039734000, "1403": 1645042030000, "1404": 1645105660000, "1405": 1645131591000, "1406": 1645497940000, "1407": 1646066491000, "1408": 1646079507000, "1409": 1646326497000, "1410": 1646326526000, "1411": 1647279478000, "1412": 1647537488000, "1413": 1647538136000, "1414": 1647540117000, "1415": 1648064495000, "1416": 1648584280000, "1417": 1648585698000, "1418": 1648589485000, "1419": 1649269683000, "1420": 1649784358000, "1421": 1651188369000, "1422": 1651665702000, "1423": 1652795093000, "1424": 1655131489000, "1425": 1655131808000, "1426": 1655131842000, "1427": 1655305529000, "1428": 1655835151000, "1429": 1655836194000, "1430": 1655932344000, "1431": 1657030540000, "1432": 1657030565000, "1433": 1657032117000, "1434": 1658253075000, "1435": 1658253281000, "1436": 1658253420000, "1437": 1659557069000, "1438": 1660327475000, "1439": 1660585052000, "1440": 1660585242000, "1441": 1660634095000, "1442": 1660663169000, "1443": 1660741736000, "1444": 1660763936000, "1445": 1660774705000, "1446": 1660843068000, "1447": 1660929515000, "1448": 1660943635000, "1449": 1661786690000, "1450": 1661921289000, "1451": 1663022673000, "1452": 1663098886000, "1453": 1663099845000, "1454": 1663168070000, "1455": 1663270682000, "1456": 1664289532000, "1457": 1666357858000, "1458": 1667225489000, "1459": 1667308592000, "1460": 1668176418000, "1461": 1668182906000, "1462": 1668184953000, "1463": 1669646309000, "1464": 1669658308000, "1465": 1670010247000, "1466": 1670019012000, "1467": 1670526497000, "1468": 1670611610000, "1469": 1670860220000, "1470": 1671028557000, "1471": 1671049697000, "1472": 1671223586000, "1473": 1671548748000, "1474": 1671552140000, "1475": 1671559495000, "1476": 1671561192000, "1477": 1671564344000, "1478": 1671585726000, "1479": 1671718224000, "1480": 1672344639000, "1481": 1674092219000, "1482": 1674582004000, "1483": 1674599590000, "1484": 1675261951000, "1485": 1675262183000, "1486": 1675262563000, "1487": 1675263179000, "1488": 1675345263000, "1489": 1675525919000, "1490": 1675535101000, "1491": 1675700867000, "1492": 1676663590000, "1493": 1677532447000, "1494": 1677594350000, "1495": 1678380389000, "1496": 1678691075000, "1497": 1678898091000, "1498": 1678899333000, "1499": 1679002159000, "1500": 1679098114000, "1501": 1679098298000, "1502": 1679147446000}, "params": {"arch": ["x86_64"], "cpu": ["Intel Xeon Processor (Skylake, IBRS)"], "machine": ["pvlib-asv.forecasting.energy.arizona.edu"], "num_cpu": ["4"], "os": ["Linux 5.7.8-200.fc32.x86_64"], "ram": ["8145244"], "python": ["3.6", "3.7", "3.8"], "numpy": ["", "1.12.0", "1.16.0", "1.16.5"], "pandas": ["", "0.22.0", "0.25.0"], "scipy": ["", "1.2.0", "1.4.0"], "pytables": ["", "3.6.1", null], "ephem": ["", "3.7.6.0"], "numba": ["", "0.36.1", "0.40.0"], "h5py": ["", "2.10.0", "3.1.0", null], "build": ["", null], "branch": ["main"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.6", "numpy": "1.12.0", "pandas": "0.22.0", "scipy": "1.2.0", "pytables": "3.6.1", "ephem": "3.7.6.0", "numba": "0.36.1", "branch": "main", "h5py": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.8", "numpy": "", "pandas": "", "scipy": "", "pytables": "", "ephem": "", "numba": "", "branch": "main", "h5py": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.6", "numpy": "1.12.0", "pandas": "0.22.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.36.1", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.8", "numpy": "", "pandas": "", "scipy": "", "h5py": "", "ephem": "", "numba": "", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.6", "numpy": "1.16.0", "pandas": "0.22.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.36.1", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.6", "numpy": "1.16.0", "pandas": "0.22.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.6", "numpy": "1.16.0", "pandas": "0.25.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.7", "numpy": "1.16.0", "pandas": "0.25.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null, "build": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.7", "build": "", "numpy": "1.16.0", "pandas": "0.25.0", "scipy": "1.2.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.8", "build": "", "numpy": "", "pandas": "", "scipy": "", "h5py": "", "ephem": "", "numba": "", "branch": "main", "pytables": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.7", "build": "", "numpy": "1.16.0", "pandas": "0.25.0", "scipy": "1.4.0", "h5py": "2.10.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null}, {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "python": "3.7", "build": "", "numpy": "1.16.5", "pandas": "0.25.0", "scipy": "1.4.0", "h5py": "3.1.0", "ephem": "3.7.6.0", "numba": "0.40.0", "branch": "main", "pytables": null}], "benchmarks": {"detect_clearsky.DetectClear.time_detect_clearsky": {"code": "class DetectClear:\n    def time_detect_clearsky(self, ndays):\n        clearsky.detect_clearsky(\n            self.measured, self.clearsky, self.times, self.window_length\n        )\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.lat = 35.1\n        self.lon = -106.6\n        self.solar_position = solarposition.get_solarposition(\n            self.times, self.lat, self.lon)\n        clearsky_df = clearsky.simplified_solis(\n            self.solar_position['apparent_elevation'])\n        self.clearsky = clearsky_df['ghi']\n        measured_dni = clearsky_df['dni'].where(\n            (self.times.hour % 2).astype(bool), 0)\n        cos_zen = np.cos(np.deg2rad(self.solar_position['apparent_zenith']))\n        self.measured = measured_dni * cos_zen + clearsky_df['dhi']\n        self.measured *= 0.98\n        self.window_length = 10", "min_run_count": 2, "name": "detect_clearsky.DetectClear.time_detect_clearsky", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9f702043d63e9ce5d26317636c1ed3c90232893763b91a1434757320dc70ad2f", "warmup_time": -1}, "infinite_sheds.InfiniteSheds.time_get_irradiance_fixed": {"code": "class InfiniteSheds:\n    def time_get_irradiance_fixed(self, vectorize):\n        infinite_sheds.get_irradiance(\n            surface_tilt=self.surface_tilt,\n            surface_azimuth=self.surface_azimuth,\n            solar_zenith=self.solar_position['apparent_zenith'],\n            solar_azimuth=self.solar_position['azimuth'],\n            gcr=self.gcr,\n            height=self.height,\n            pitch=self.pitch,\n            ghi=self.clearsky_irradiance['ghi'],\n            dhi=self.clearsky_irradiance['dhi'],\n            dni=self.clearsky_irradiance['dni'],\n            albedo=self.albedo,\n            npoints=self.npoints,\n            vectorize=vectorize,\n        )\n\n    def setup(self, vectorize):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(\n            self.times,\n            solar_position=self.solar_position,\n        )\n        self.surface_tilt = 20\n        self.surface_azimuth = 180\n        self.gcr = 0.35\n        self.height = 2.5\n        self.pitch = 5.\n        self.albedo = 0.2\n        self.npoints = 100\n    \n        with np.errstate(invalid='ignore'):\n            self.tracking = tracking.singleaxis(\n                self.solar_position['apparent_zenith'],\n                self.solar_position['azimuth'],\n                axis_tilt=0,\n                axis_azimuth=0,\n                max_angle=60,\n                backtrack=True,\n                gcr=self.gcr\n            )", "min_run_count": 2, "name": "infinite_sheds.InfiniteSheds.time_get_irradiance_fixed", "number": 0, "param_names": ["vectorize"], "params": [["True", "False"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ad7e015fd0c9f2927ed72fbffc992e4e924c26715a10e9c627798ee3d1643a15", "warmup_time": -1}, "infinite_sheds.InfiniteSheds.time_get_irradiance_poa_fixed": {"code": "class InfiniteSheds:\n    def time_get_irradiance_poa_fixed(self, vectorize):\n        infinite_sheds.get_irradiance_poa(\n            surface_tilt=self.surface_tilt,\n            surface_azimuth=self.surface_azimuth,\n            solar_zenith=self.solar_position['apparent_zenith'],\n            solar_azimuth=self.solar_position['azimuth'],\n            gcr=self.gcr,\n            height=self.height,\n            pitch=self.pitch,\n            ghi=self.clearsky_irradiance['ghi'],\n            dhi=self.clearsky_irradiance['dhi'],\n            dni=self.clearsky_irradiance['dni'],\n            albedo=self.albedo,\n            npoints=self.npoints,\n            vectorize=vectorize,\n        )\n\n    def setup(self, vectorize):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(\n            self.times,\n            solar_position=self.solar_position,\n        )\n        self.surface_tilt = 20\n        self.surface_azimuth = 180\n        self.gcr = 0.35\n        self.height = 2.5\n        self.pitch = 5.\n        self.albedo = 0.2\n        self.npoints = 100\n    \n        with np.errstate(invalid='ignore'):\n            self.tracking = tracking.singleaxis(\n                self.solar_position['apparent_zenith'],\n                self.solar_position['azimuth'],\n                axis_tilt=0,\n                axis_azimuth=0,\n                max_angle=60,\n                backtrack=True,\n                gcr=self.gcr\n            )", "min_run_count": 2, "name": "infinite_sheds.InfiniteSheds.time_get_irradiance_poa_fixed", "number": 0, "param_names": ["vectorize"], "params": [["True", "False"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4da2c7a712e0bb9770ab9d57c53a8aac021ba35426a72bbb887b0a19ca459a2c", "warmup_time": -1}, "infinite_sheds.InfiniteSheds.time_get_irradiance_poa_tracking": {"code": "class InfiniteSheds:\n    def time_get_irradiance_poa_tracking(self, vectorize):\n        infinite_sheds.get_irradiance_poa(\n            surface_tilt=self.tracking['surface_tilt'],\n            surface_azimuth=self.tracking['surface_azimuth'],\n            solar_zenith=self.solar_position['apparent_zenith'],\n            solar_azimuth=self.solar_position['azimuth'],\n            gcr=self.gcr,\n            height=self.height,\n            pitch=self.pitch,\n            ghi=self.clearsky_irradiance['ghi'],\n            dhi=self.clearsky_irradiance['dhi'],\n            dni=self.clearsky_irradiance['dni'],\n            albedo=self.albedo,\n            npoints=self.npoints,\n            vectorize=vectorize,\n        )\n\n    def setup(self, vectorize):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(\n            self.times,\n            solar_position=self.solar_position,\n        )\n        self.surface_tilt = 20\n        self.surface_azimuth = 180\n        self.gcr = 0.35\n        self.height = 2.5\n        self.pitch = 5.\n        self.albedo = 0.2\n        self.npoints = 100\n    \n        with np.errstate(invalid='ignore'):\n            self.tracking = tracking.singleaxis(\n                self.solar_position['apparent_zenith'],\n                self.solar_position['azimuth'],\n                axis_tilt=0,\n                axis_azimuth=0,\n                max_angle=60,\n                backtrack=True,\n                gcr=self.gcr\n            )", "min_run_count": 2, "name": "infinite_sheds.InfiniteSheds.time_get_irradiance_poa_tracking", "number": 0, "param_names": ["vectorize"], "params": [["True", "False"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3379788a4ee59b5272f818bd4d321de8373992e43af5121b83a2aa063bcd42ed", "warmup_time": -1}, "infinite_sheds.InfiniteSheds.time_get_irradiance_tracking": {"code": "class InfiniteSheds:\n    def time_get_irradiance_tracking(self, vectorize):\n        infinite_sheds.get_irradiance(\n            surface_tilt=self.tracking['surface_tilt'],\n            surface_azimuth=self.tracking['surface_azimuth'],\n            solar_zenith=self.solar_position['apparent_zenith'],\n            solar_azimuth=self.solar_position['azimuth'],\n            gcr=self.gcr,\n            height=self.height,\n            pitch=self.pitch,\n            ghi=self.clearsky_irradiance['ghi'],\n            dhi=self.clearsky_irradiance['dhi'],\n            dni=self.clearsky_irradiance['dni'],\n            albedo=self.albedo,\n            npoints=self.npoints,\n            vectorize=vectorize,\n        )\n\n    def setup(self, vectorize):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(\n            self.times,\n            solar_position=self.solar_position,\n        )\n        self.surface_tilt = 20\n        self.surface_azimuth = 180\n        self.gcr = 0.35\n        self.height = 2.5\n        self.pitch = 5.\n        self.albedo = 0.2\n        self.npoints = 100\n    \n        with np.errstate(invalid='ignore'):\n            self.tracking = tracking.singleaxis(\n                self.solar_position['apparent_zenith'],\n                self.solar_position['azimuth'],\n                axis_tilt=0,\n                axis_azimuth=0,\n                max_angle=60,\n                backtrack=True,\n                gcr=self.gcr\n            )", "min_run_count": 2, "name": "infinite_sheds.InfiniteSheds.time_get_irradiance_tracking", "number": 0, "param_names": ["vectorize"], "params": [["True", "False"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "229ce7397c2a7262cc0ea6f5709354b8c98c3b314b0a89f72e94a67057e4297c", "warmup_time": -1}, "irradiance.Irradiance.time_aoi": {"code": "class Irradiance:\n    def time_aoi(self):\n        irradiance.aoi(self.tilt, self.azimuth,\n                       self.solar_position.apparent_zenith,\n                       self.solar_position.azimuth)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_aoi", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3b647b188210e8908d09def8075125326e0be2c84475d1df5902049801bbce75", "warmup_time": -1}, "irradiance.Irradiance.time_aoi_projection": {"code": "class Irradiance:\n    def time_aoi_projection(self):\n        irradiance.aoi_projection(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_aoi_projection", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1179c06295d1973a6d7b937f1819bf42853e6483a7416a33ae61136345ce57fb", "warmup_time": -1}, "irradiance.Irradiance.time_dirindex": {"code": "class Irradiance:\n    def time_dirindex(self):\n        irradiance.dirindex(self.clearsky_irradiance.ghi,\n                            self.clearsky_irradiance.ghi,\n                            self.clearsky_irradiance.dni,\n                            self.solar_position.apparent_zenith,\n                            self.times)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_dirindex", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "be06adb7a48a40f97331e048b6a1de6f30d0d0f05e995ee0eb6cf5b7ae2d3827", "warmup_time": -1}, "irradiance.Irradiance.time_dirint": {"code": "class Irradiance:\n    def time_dirint(self):\n        irradiance.dirint(self.clearsky_irradiance.ghi,\n                          self.solar_position.apparent_zenith,\n                          self.times)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_dirint", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3c5cf911e401536b0cb0b6262184730d1129d0978a2c7aba2384b463de97c893", "warmup_time": -1}, "irradiance.Irradiance.time_disc": {"code": "class Irradiance:\n    def time_disc(self):\n        irradiance.disc(self.clearsky_irradiance.ghi,\n                        self.solar_position.apparent_zenith,\n                        self.times)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_disc", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0d62ee79c3d5359dbbc332f1a6a3680914a81e73f7ae62cd2dafba15f05884e1", "warmup_time": -1}, "irradiance.Irradiance.time_erbs": {"code": "class Irradiance:\n    def time_erbs(self):\n        irradiance.erbs(self.clearsky_irradiance.ghi,\n                        self.solar_position.apparent_zenith,\n                        self.times)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_erbs", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6c160f7d30317eb7fa330b554cb3a4f1623fd7ea7709f772b4ed4d80f56ffa52", "warmup_time": -1}, "irradiance.Irradiance.time_get_extra_radiation": {"code": "class Irradiance:\n    def time_get_extra_radiation(self):\n        irradiance.get_extra_radiation(self.days)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_get_extra_radiation", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e18dbf6318c72698e6b07e752c186c475f4f80b3e7f64ea6a140d99ef62a6d90", "warmup_time": -1}, "irradiance.Irradiance.time_get_ground_diffuse": {"code": "class Irradiance:\n    def time_get_ground_diffuse(self):\n        irradiance.get_ground_diffuse(self.tilt, self.clearsky_irradiance.ghi)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_get_ground_diffuse", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "432eb6d93dd3eb8dacafd8b7688332641ced5e38cef55be87aa059fc1602eb29", "warmup_time": -1}, "irradiance.Irradiance.time_get_total_irradiance": {"code": "class Irradiance:\n    def time_get_total_irradiance(self):\n        irradiance.get_total_irradiance(self.tilt, self.azimuth,\n                                        self.solar_position.apparent_zenith,\n                                        self.solar_position.azimuth,\n                                        self.clearsky_irradiance.dni,\n                                        self.clearsky_irradiance.ghi,\n                                        self.clearsky_irradiance.dhi)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.days = pd.date_range(start='20180601', freq='d', periods=30)\n        self.location = location.Location(40, -80)\n        self.solar_position = self.location.get_solarposition(self.times)\n        self.clearsky_irradiance = self.location.get_clearsky(self.times)\n        self.tilt = 20\n        self.azimuth = 180\n        self.aoi = irradiance.aoi(self.tilt, self.azimuth,\n                                  self.solar_position.apparent_zenith,\n                                  self.solar_position.azimuth)", "min_run_count": 2, "name": "irradiance.Irradiance.time_get_total_irradiance", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "636a200318992ce212bde7aa680ebccd54a2c1558efb4b99e838ffe2a60f416b", "warmup_time": -1}, "location.Location.time_location_get_airmass": {"code": "class Location:\n    def time_location_get_airmass(self):\n        self.location.get_airmass(solar_position=self.solar_position)\n\n    def setup(self):\n        set_solar_position(self)", "min_run_count": 2, "name": "location.Location.time_location_get_airmass", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "588b69638c1a6ec9b5141d16209e9162dc74336f9013282de3dfbb462698b26e", "warmup_time": -1}, "location.Location.time_location_get_clearsky": {"code": "class Location:\n    def time_location_get_clearsky(self):\n        self.location.get_clearsky(times=self.times,\n                                   solar_position=self.solar_position)\n\n    def setup(self):\n        set_solar_position(self)", "min_run_count": 2, "name": "location.Location.time_location_get_clearsky", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f60edac83a9a6e3900900e8d8a2e857af67dbe5cba75871736e106899cd46a98", "warmup_time": -1}, "location.Location.time_location_get_solarposition": {"code": "class Location:\n    def time_location_get_solarposition(self):\n        self.location.get_solarposition(times=self.times)\n\n    def setup(self):\n        set_solar_position(self)", "min_run_count": 2, "name": "location.Location.time_location_get_solarposition", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8fd3e3632c37c96dbb3419fe7b7852e76694f95f716a076311276503d5145ba6", "warmup_time": -1}, "location.Location_0_6_1.time_location_get_sun_rise_set_transit_pyephem": {"code": "class Location_0_6_1:\n    def time_location_get_sun_rise_set_transit_pyephem(self):\n        self.location.get_sun_rise_set_transit(times=self.days,\n                                               method='pyephem')\n\n    def setup(self):\n        if parse_version(pvlib.__version__) < parse_version('0.6.1'):\n            raise NotImplementedError\n    \n        set_solar_position(self)", "min_run_count": 2, "name": "location.Location_0_6_1.time_location_get_sun_rise_set_transit_pyephem", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a331c66d50a25e7a63ab7d62c34584dc03514385bd8b254cc0d01d6a148f1e2f", "warmup_time": -1}, "location.Location_0_6_1.time_location_get_sun_rise_set_transit_spa": {"code": "class Location_0_6_1:\n    def time_location_get_sun_rise_set_transit_spa(self):\n        self.location.get_sun_rise_set_transit(times=self.days,\n                                               method='spa')\n\n    def setup(self):\n        if parse_version(pvlib.__version__) < parse_version('0.6.1'):\n            raise NotImplementedError\n    \n        set_solar_position(self)", "min_run_count": 2, "name": "location.Location_0_6_1.time_location_get_sun_rise_set_transit_spa", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "38ae64f4d0240fdcedf30f8287c01235d67a81d9493acac3a4c3338f5c602f35", "warmup_time": -1}, "scaling.Scaling.time__compute_vr": {"code": "class Scaling:\n    def time__compute_vr(self):\n        scaling._compute_vr(self.positions, self.cloud_speed, self.tmscales)\n\n    def setup(self):\n        self.n = 1000\n        lat = np.array((9.99, 10, 10.01))\n        lon = np.array((4.99, 5, 5.01))\n        self.coordinates = np.array([(lati, loni) for\n                                     (lati, loni) in zip(lat, lon)])\n        self.times = pd.date_range('2019-01-01', freq='1T', periods=self.n)\n        self.positions = np.array([[0, 0], [100, 0], [100, 100], [0, 100]])\n        self.clearsky_index = pd.Series(np.random.rand(self.n),\n                                        index=self.times)\n        self.cloud_speed = 5\n        self.tmscales = np.array((1, 2, 4, 8, 16, 32, 64,\n                                 128, 256, 512, 1024, 2048, 4096))", "min_run_count": 2, "name": "scaling.Scaling.time__compute_vr", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cdba69fb9e52ee04eddd1f41f612ac2713dd5e2f7bab07c14ea9e5a5e7d2ac8a", "warmup_time": -1}, "scaling.Scaling.time__compute_wavelet": {"code": "class Scaling:\n    def time__compute_wavelet(self):\n        scaling._compute_wavelet(self.clearsky_index, dt=1)\n\n    def setup(self):\n        self.n = 1000\n        lat = np.array((9.99, 10, 10.01))\n        lon = np.array((4.99, 5, 5.01))\n        self.coordinates = np.array([(lati, loni) for\n                                     (lati, loni) in zip(lat, lon)])\n        self.times = pd.date_range('2019-01-01', freq='1T', periods=self.n)\n        self.positions = np.array([[0, 0], [100, 0], [100, 100], [0, 100]])\n        self.clearsky_index = pd.Series(np.random.rand(self.n),\n                                        index=self.times)\n        self.cloud_speed = 5\n        self.tmscales = np.array((1, 2, 4, 8, 16, 32, 64,\n                                 128, 256, 512, 1024, 2048, 4096))", "min_run_count": 2, "name": "scaling.Scaling.time__compute_wavelet", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5437fdf3c07e9e25dd0835688eef96334afbbaec89cac5d5ae230c8c03a581cd", "warmup_time": -1}, "scaling.Scaling.time_latlon_to_xy": {"code": "class Scaling:\n    def time_latlon_to_xy(self):\n        scaling.latlon_to_xy(self.coordinates)\n\n    def setup(self):\n        self.n = 1000\n        lat = np.array((9.99, 10, 10.01))\n        lon = np.array((4.99, 5, 5.01))\n        self.coordinates = np.array([(lati, loni) for\n                                     (lati, loni) in zip(lat, lon)])\n        self.times = pd.date_range('2019-01-01', freq='1T', periods=self.n)\n        self.positions = np.array([[0, 0], [100, 0], [100, 100], [0, 100]])\n        self.clearsky_index = pd.Series(np.random.rand(self.n),\n                                        index=self.times)\n        self.cloud_speed = 5\n        self.tmscales = np.array((1, 2, 4, 8, 16, 32, 64,\n                                 128, 256, 512, 1024, 2048, 4096))", "min_run_count": 2, "name": "scaling.Scaling.time_latlon_to_xy", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "de3468a855771c9933a2ca961566cc7e26f1ece73b69855a109612f9c4117674", "warmup_time": -1}, "scaling.Scaling.time_wvm": {"code": "class Scaling:\n    def time_wvm(self):\n        scaling.wvm(self.clearsky_index, self.positions,\n                    self.cloud_speed, dt=1)\n\n    def setup(self):\n        self.n = 1000\n        lat = np.array((9.99, 10, 10.01))\n        lon = np.array((4.99, 5, 5.01))\n        self.coordinates = np.array([(lati, loni) for\n                                     (lati, loni) in zip(lat, lon)])\n        self.times = pd.date_range('2019-01-01', freq='1T', periods=self.n)\n        self.positions = np.array([[0, 0], [100, 0], [100, 100], [0, 100]])\n        self.clearsky_index = pd.Series(np.random.rand(self.n),\n                                        index=self.times)\n        self.cloud_speed = 5\n        self.tmscales = np.array((1, 2, 4, 8, 16, 32, 64,\n                                 128, 256, 512, 1024, 2048, 4096))", "min_run_count": 2, "name": "scaling.Scaling.time_wvm", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "27c45cc4001ce5b443f86f5db11f82da191c496a677f33ad6696b0d238590316", "warmup_time": -1}, "solarposition.SolarPosition.time_ephemeris": {"code": "class SolarPosition:\n    def time_ephemeris(self, ndays):\n        solarposition.ephemeris(self.times, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_ephemeris", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0cec9f456e0b3afe25b1276c4b65f031aeefcb946be1f1799e5464be56858d31", "warmup_time": -1}, "solarposition.SolarPosition.time_ephemeris_localized": {"code": "class SolarPosition:\n    def time_ephemeris_localized(self, ndays):\n        solarposition.ephemeris(self.times_localized, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_ephemeris_localized", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "30e784c9a8816a832a26c8830346bece1998377e52c35f1067868c72c950ff90", "warmup_time": -1}, "solarposition.SolarPosition.time_nrel_earthsun_distance": {"code": "class SolarPosition:\n    def time_nrel_earthsun_distance(self, ndays):\n        solarposition.nrel_earthsun_distance(self.times_localized)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_nrel_earthsun_distance", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "db907059fae0b75e926efdd158ab7ccf7c84b88bc15dd9d72e71b3175c4001a7", "warmup_time": -1}, "solarposition.SolarPosition.time_pyephem": {"code": "class SolarPosition:\n    def time_pyephem(self, ndays):\n        solarposition.pyephem(self.times_localized, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_pyephem", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9ab40ad95317886f9eecea0edeb53440b28a61fcd44695e75c91c8668dce2178", "warmup_time": -1}, "solarposition.SolarPosition.time_spa_python": {"code": "class SolarPosition:\n    def time_spa_python(self, ndays):\n        solarposition.spa_python(self.times_localized, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_spa_python", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5d07d0c0038c41e33e78a17a879744fb49a68efe59361510c4b669494bb4c0c4", "warmup_time": -1}, "solarposition.SolarPosition.time_sun_rise_set_transit_ephem": {"code": "class SolarPosition:\n    def time_sun_rise_set_transit_ephem(self, ndays):\n        solarposition.sun_rise_set_transit_ephem(\n            self.times_daily, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_sun_rise_set_transit_ephem", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "99f398265e26841b75fd9df0b30fd3c8bd88b14cf8b1d66096fef9fe5e25e2d2", "warmup_time": -1}, "solarposition.SolarPosition.time_sun_rise_set_transit_geometric_full_comparison": {"code": "class SolarPosition:\n    def time_sun_rise_set_transit_geometric_full_comparison(self, ndays):\n        dayofyear = self.times_daily.dayofyear\n        declination = solarposition.declination_spencer71(dayofyear)\n        equation_of_time = solarposition.equation_of_time_spencer71(dayofyear)\n        solarposition.sun_rise_set_transit_geometric(\n            self.times_daily, self.lat, self.lon, declination,\n            equation_of_time)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_sun_rise_set_transit_geometric_full_comparison", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4b80d659e148c36913bf6fdab24639ef07c08a0be5a3fb2d3ebd7fcae1d36dc2", "warmup_time": -1}, "solarposition.SolarPosition.time_sun_rise_set_transit_spa": {"code": "class SolarPosition:\n    def time_sun_rise_set_transit_spa(self, ndays):\n        sun_rise_set_transit_spa(self.times_daily, self.lat, self.lon)\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition.SolarPosition.time_sun_rise_set_transit_spa", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e92a184909f72b9f6c52cff5c8a8210c77f15c446b49bfe8bf05e9d55b67b120", "warmup_time": -1}, "solarposition.SolarPositionCalcTime.time_calc_time": {"code": "class SolarPositionCalcTime:\n    def time_calc_time(self):\n        # datetime.datetime(2020, 9, 14, 13, 24, 13, 861913, tzinfo=<UTC>)\n        solarposition.calc_time(\n            self.start, self.end, self.lat, self.lon, self.attribute,\n            self.value\n        )\n\n    def setup(self):\n        # test calc_time for finding times at which sun is 3 degrees\n        # above the horizon.\n        # Tucson 2020-09-14 sunrise at 6:08 AM MST, 13:08 UTC\n        # according to google.\n        self.start = datetime.datetime(2020, 9, 14, 12)\n        self.end = datetime.datetime(2020, 9, 14, 15)\n        self.value = 0.05235987755982988\n        self.lat = 32.2\n        self.lon = -110.9\n        self.attribute = 'alt'", "min_run_count": 2, "name": "solarposition.SolarPositionCalcTime.time_calc_time", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c16325f76cd89a97dbe18070b0d3676c8233f7699e616ec01b38eae741a1c9da", "warmup_time": -1}, "solarposition_numba.SolarPositionNumba.time_spa_python": {"code": "class SolarPositionNumba:\n    def time_spa_python(self, ndays):\n        solarposition.spa_python(\n            self.times_localized, self.lat, self.lon, how='numba')\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition_numba.SolarPositionNumba.time_spa_python", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f5c6dac37e461d531e6ac48fbac036c230ded3021315d3d174969f538b57e8cf", "warmup_time": -1}, "solarposition_numba.SolarPositionNumba.time_sun_rise_set_transit_spa": {"code": "class SolarPositionNumba:\n    def time_sun_rise_set_transit_spa(self, ndays):\n        sun_rise_set_transit_spa(\n            self.times_daily, self.lat, self.lon, how='numba')\n\n    def setup(self, ndays):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=1440*ndays)\n        self.times_localized = self.times.tz_localize('Etc/GMT+7')\n        self.lat = 35.1\n        self.lon = -106.6\n        self.times_daily = pd.date_range(\n            start='20180601', freq='24h', periods=ndays, tz='Etc/GMT+7')", "min_run_count": 2, "name": "solarposition_numba.SolarPositionNumba.time_sun_rise_set_transit_spa", "number": 0, "param_names": ["ndays"], "params": [["1", "10", "100"]], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "bf3d5c1fd60630f6ceb96d3d56eb8d3a47afa69afe63d276a6382e2a43be6be4", "warmup_time": -1}, "temperature.Fuentes.time_fuentes": {"code": "class Fuentes:\n    def time_fuentes(self):\n        pvlib.temperature.fuentes(self.poa, self.tamb, self.wind_speed,\n                                  noct_installed=45)\n\n    def setup(self):\n        if parse_version(pvlib.__version__) < parse_version('0.8.0'):\n            raise NotImplementedError\n    \n        set_weather_data(self)", "min_run_count": 2, "name": "temperature.Fuentes.time_fuentes", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d11c7010997b69643e2f8e0a1c1dd5f6fa7d1224785430cd45e5a4fcb739b7a9", "warmup_time": -1}, "temperature.SAPM.time_sapm_cell": {"code": "class SAPM:\n    def time_sapm_cell(self):\n        # use version-appropriate wrapper\n        self.sapm_cell_wrapper(self.poa, self.tamb, self.wind_speed)\n\n    def setup(self):\n        set_weather_data(self)\n        if parse_version(pvlib.__version__) >= parse_version('0.7.0'):\n            kwargs = pvlib.temperature.TEMPERATURE_MODEL_PARAMETERS['sapm']\n            kwargs = kwargs['open_rack_glass_glass']\n            self.sapm_cell_wrapper = partial(pvlib.temperature.sapm_cell,\n                                             **kwargs)\n        else:\n            sapm_celltemp = pvlib.pvsystem.sapm_celltemp\n    \n            def sapm_cell_wrapper(poa_global, temp_air, wind_speed):\n                # just swap order; model params are provided by default\n                return sapm_celltemp(poa_global, wind_speed, temp_air)\n            self.sapm_cell_wrapper = sapm_cell_wrapper", "min_run_count": 2, "name": "temperature.SAPM.time_sapm_cell", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7e22d15880756cf3058aedd30ba06679400b754adfe65234a0e90dcca86b701b", "warmup_time": -1}, "tracking.SingleAxis.time_singleaxis": {"code": "class SingleAxis:\n    def time_singleaxis(self):\n        with np.errstate(invalid='ignore'):\n            tracking.singleaxis(self.solar_position.apparent_zenith,\n                                self.solar_position.azimuth,\n                                axis_tilt=0,\n                                axis_azimuth=0,\n                                max_angle=60,\n                                backtrack=True,\n                                gcr=0.45)\n\n    def setup(self):\n        self.times = pd.date_range(start='20180601', freq='1min',\n                                   periods=14400)\n        self.lat = 35.1\n        self.lon = -106.6\n        self.solar_position = solarposition.get_solarposition(self.times,\n                                                              self.lat,\n                                                              self.lon)", "min_run_count": 2, "name": "tracking.SingleAxis.time_singleaxis", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4068649442cab168c9782b3916d83b646d2ed0a0fde4bce138acc561f06a6f27", "warmup_time": -1}}, "machines": {"pvlib-asv.forecasting.energy.arizona.edu": {"arch": "x86_64", "cpu": "Intel Xeon Processor (Skylake, IBRS)", "machine": "pvlib-asv.forecasting.energy.arizona.edu", "num_cpu": "4", "os": "Linux 5.7.8-200.fc32.x86_64", "ram": "8145244", "version": 1}}, "tags": {"0.1": 469, "prearizona": 31, "pvliborg": 325, "update-data": 1104, "v0.2.0": 522, "v0.2.1": 548, "v0.2.2": 591, "v0.3.0": 789, "v0.3.1": 809, "v0.3.2": 812, "v0.3.3": 835, "v0.4.0": 861, "v0.4.1": 871, "v0.4.2": 883, "v0.4.3": 887, "v0.4.4": 898, "v0.4.5": 906, "v0.5.0": 921, "v0.5.1": 933, "v0.5.2": 955, "v0.6.0": 1016, "v0.6.0-alpha": 992, "v0.6.0-alpha2": 1009, "v0.6.0-beta": 1015, "v0.6.1": 1054, "v0.6.1-alpha": 1040, "v0.6.1-beta": 1041, "v0.6.1-beta.2": 1053, "v0.6.2": 1083, "v0.6.2-rc.1": 1082, "v0.6.3": 1084, "v0.6.3-rc.1": 1084, "v0.7.0": 1141, "v0.7.1": 1153, "v0.7.2": 1202, "v0.7.2-rc.1": 1201, "v0.8.0": 1280, "v0.8.0-alpha": 1256, "v0.8.0-beta": 1271, "v0.8.1": 1305, "v0.9.0": 1378, "v0.9.0-alpha.1": 1311, "v0.9.0-alpha.2": 1316, "v0.9.0-alpha.3": 1320, "v0.9.0-alpha.4": 1322, "v0.9.0-alpha.5": 1329, "v0.9.0-alpha.6": 1334, "v0.9.0-alpha.7": 1337, "v0.9.1": 1418, "v0.9.2": 1448, "v0.9.2-alpha.1": 1442, "v0.9.2-alpha.2": 1444, "v0.9.2-alpha.3": 1445, "v0.9.3": 1455, "v0.9.4": 1478, "v0.9.4-alpha.1": 1459, "v0.9.5": 1502}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}